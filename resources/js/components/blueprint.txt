<template>
    <DataTable :data="articles.value" :columns="columns" ref="articles">
        <thead>
        <tr>
            <th>Title</th>
            <th>Link</th>
            <th>Points</th>
            <th>Date Created</th>
        </tr>
        </thead>
        <tbody>
            <tr v-for="(article, index) in articles.value" ref="articles" :key="index">
                <td>{{ article.title }}</td>
                <td><a :href="article.link">{{ article.link }}</a></td>
                <td>{{ article.points }}</td>
<!--                <td>{{ article.date_created }}</td>-->
            </tr>
        </tbody>
    </DataTable>
</template>

<script setup>
    import DataTable from 'datatables.net-vue3';
    import DataTablesCore from 'datatables.net';
    import { ref, onMounted } from 'vue';
    import axios from 'axios';
    import { isProxy, toRaw } from 'vue';
    import {__esModule as table} from "datatables.net-vue3/dist/datatables.net-vue3.js";

    DataTable.use(DataTablesCore);

    const articles = ref([]);
    const isLoading = ref(false);
    let dt;
    const columns = [
        {
            data: 'title',
            title: 'Title',
        },
        {
            data: 'link',
            title: 'Link',
        },
        {
            data: 'points',
            title: 'points'
        }
    ]


    const fetchData = async () => {
        try {
            isLoading.value = true;
            const response = await axios.get('/api/scrape-and-save');
            articles.value = response.data.data;
            console.log('articles.value', toRaw(articles.value));
        } catch (error) {
            console.error('Failed to fetch data: ', error);
        } finally {
            isLoading.value = false;
        }
    };

    onMounted(fetchData, function () {
        dt = table.value.dt;
    });
</script>
